name: Pre-commit Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master, main, develop]

# Cancel previous runs for the same PR
concurrency:
  group: pre-commit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Lightning-fast checks for immediate feedback
  quick-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install pre-commit and ruff
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit ruff

    - name: Cache pre-commit environments
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          pre-commit-${{ runner.os }}-

    - name: Fast lint with ruff
      run: |
        echo "üîç Running fast linting checks..."
        ruff check --output-format=github .
        ruff format --check .

    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files --show-diff-on-failure

  # Type checking (can run in parallel)
  type-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install type checking dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy types-requests types-setuptools

    - name: Run mypy type checking
      run: |
        echo "üîç Running type checking..."
        mypy xpcs_toolkit --ignore-missing-imports --show-error-codes --pretty
      continue-on-error: true  # Don't block on type issues

  # Security scanning (lightweight)
  security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Run bandit security scan
      run: |
        echo "üîí Running security scan..."
        bandit -r xpcs_toolkit --format=screen --severity-level=medium

    - name: Check for known vulnerabilities
      run: |
        echo "üîç Checking dependencies for vulnerabilities..."
        pip install -e . --no-deps
        safety check --short-report

  # Status check - combines all results
  pre-commit-status:
    runs-on: ubuntu-latest
    needs: [quick-checks, type-check, security-scan]
    if: always()

    steps:
    - name: Check Status
      run: |
        echo "‚ö° Pre-commit Checks Summary"
        echo "=========================="
        echo "üîç Lint & Format: ${{ needs.quick-checks.result }}"
        echo "üîé Type Check: ${{ needs.type-check.result }}"
        echo "üîí Security: ${{ needs.security-scan.result }}"

        if [ "${{ needs.quick-checks.result }}" = "failure" ]; then
          echo "‚ùå Linting/formatting failed - please fix before merging"
          exit 1
        elif [ "${{ needs.type-check.result }}" = "failure" ]; then
          echo "‚ö†Ô∏è Type checking failed - consider fixing type issues"
          # Don't exit 1 - just warn
        elif [ "${{ needs.security-scan.result }}" = "failure" ]; then
          echo "‚ö†Ô∏è Security scan found issues - please review"
          # Don't exit 1 - just warn
        fi

        echo "‚úÖ Pre-commit checks completed"